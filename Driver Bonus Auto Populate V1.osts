{"version":"0.2.0","body":"/*\n  AUTHOR: Raymond Levi Triana\n  Purpose: Parse the picscan report for the scan rates of drivers and populate the tables with this data\n */\n\nlet buffer: (string|number|boolean)[] =[];\n\n/*customizable parameters*/\nlet scanRateColumn = 4//zero-indexed column at target tables\nlet sourceTablePage = \"PicScan\"\n\nfunction main(workbook: ExcelScript.Workbook) {\n  let source_table_ref:ExcelScript.Table = getSourceTableRef(workbook);\n\n  parseTable(source_table_ref)\n  updateTables(workbook)\n}\n\nfunction updateTables(workbook: ExcelScript.Workbook){\n  let worksheets = workbook.getWorksheets()\n  for(let i=0; i < worksheets.length; i++){//loop through sheets\n    if(worksheets[i].getName()!=sourceTablePage){\n      let targetTable:ExcelScript.Table = worksheets[i].getTables()[0]\n\n      if(!targetTable)//if table does not exist go to next sheet\n        continue;\n        \n      for (let j = 0; j < targetTable.getRowCount(); j++) {//loop through the table's rows\n        let row = targetTable.getRangeBetweenHeaderAndTotal().getRow(j)\n        let driverID_l: string | number | boolean = row.getColumn(0).getValue().toString()\n        let bufferIndex = buffer.indexOf(driverID_l)\n        if(bufferIndex!=-1){//if the element exists in buffer\n          row.getColumn(scanRateColumn).setValue(\"TRUE\")\n          buffer.splice(bufferIndex,1)//remove the element to speed up searches\n        }\n        else{\n          row.getColumn(scanRateColumn).setValue(\"\")\n        }\n      }\n    }\n  }\n}\n\nfunction parseTable(table:ExcelScript.Table){//parse the PicScan table for the driverID and scan rate and pushes records into the driver_cache matrix\n  const IDCOLUMN = 0\n  const SCANRATECOLUMN = 8\n  const DEPOTCOLUMN = 2\n\n  let tableData = table.getRangeBetweenHeaderAndTotal()\n  let driverID_l:string | number | boolean\n  let scanRate_l: string | number | boolean\n  let depot_l: string | number | boolean\n\n  let rowCount = tableData.getRowCount()\n  for (let i = 0;i < rowCount; i++) {//loop through the table's rows\n    /*improvement?? replace rowcache with a cache of the whole table??*/\n    let rowCache = tableData.getRow(i)\n    driverID_l = rowCache.getColumn(IDCOLUMN).getValue()\n    scanRate_l = rowCache.getColumn(SCANRATECOLUMN).getValue()\n    if (scanRate_l < 90)\n      buffer.push(driverID_l)\n  }\n  buffer.sort()\n}\n\nfunction getSourceTableRef(workbook: ExcelScript.Workbook){//returns a pointer to the table in the picscan page\n  return workbook.getWorksheet(sourceTablePage).getTables()[0]\n}","description":"","parameterInfo":"{\"originalParameterOrder\":[],\"parameterSchema\":{\"type\":\"object\",\"default\":{},\"x-ms-visibility\":\"internal\"},\"returnSchema\":{\"type\":\"object\",\"properties\":{}}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}