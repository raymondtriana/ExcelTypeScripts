{"version":"0.2.0","body":"/*\nAUTHOR: Raymond Levi Triana\nPURPOSE: Updates the Interface with formulas to search the Database\nDate: 10/05/2022\nWORKBOOK: Maintenance Request\n*/\nvar workbook: ExcelScript.Workbook\nvar database_sheet: ExcelScript.Worksheet\nvar database_table: ExcelScript.Table\nvar database_range: ExcelScript.Range\nvar interface_sheet: ExcelScript.Worksheet\nvar search_table: ExcelScript.Table\nvar adv_search: search_form\nconst search_options={\n  id:\"Employee #\",\n  name:\"Name\",\n  email:\"E-mail\"\n}\nclass search_form{\n  search_term:unique_cell\n  search_option:unique_cell\n  constructor(worksheet:ExcelScript.Worksheet){\n    this.search_option = new unique_cell(worksheet,1,9)\n    this.search_term = new unique_cell(worksheet, 1, 10)\n  }\n  searchByID(){\n    this.populateTable(this.getRows(\"F\"))\n  }\n  searchByEmail(){\n    this.populateTable(this.getRows(\"D\"))\n  }\n  searchByName(){\n    this.populateTable(this.getRows(\"E\"))\n  }\n  getRows(search_col:string){\n    var rowsBuffer:number[] = new Array()\n    var targetRow:number\n    let targetCell = database_range.find(this.search_term.getValue(), {//finds first occurence\n      completeMatch: true,\n      searchDirection: ExcelScript.SearchDirection.forward\n    })\n    if(targetCell){\n      targetRow = parseInt(targetCell.getAddress().split(\"Database!\" + search_col)[1].toString())//parse to row number\n      rowsBuffer.push(targetRow)\n    }\n    while (targetCell) {\n      targetCell = database_sheet.getRangeByIndexes(targetRow, 0, database_table.getRowCount(), database_table.getColumns().length).find(this.search_term.getValue(), {//offset and get next occurrence\n        completeMatch: true,\n        searchDirection: ExcelScript.SearchDirection.forward\n      })\n      if (targetCell){//push to array if row was found\n        targetRow = parseInt(targetCell.getAddress().split(\"Database!\"+search_col)[1].toString())\n        rowsBuffer.push(targetRow)\n      }\n    }\n    return rowsBuffer\n  }\n  populateTable(rows:number[]){\n    var row:ExcelScript.Range=null\n    var formatted_entry:string[] = new Array(search_table.getColumns().length)\n    /*remove row from source table */\n    search_table.clearFilters()\n    search_table.getRangeBetweenHeaderAndTotal().clear()//clear table\n    search_table.resize(\"J4:O5\")\n    for(var i=0;i<rows.length;i++){\n      row = database_sheet.getRangeByIndexes(rows[i]-1,0,1,database_table.getColumns().length).getEntireRow()\n      formatted_entry[0]=row.getCell(0,0).getValue().toString()\n      formatted_entry[1] = row.getCell(0, 2).getValue().toString()\n      formatted_entry[2] = row.getCell(0, 5).getValue().toString()\n      formatted_entry[3] = row.getCell(0, 4).getValue().toString()\n      formatted_entry[4] = row.getCell(0, 3).getValue().toString()\n      formatted_entry[5] = row.getCell(0, 7).getValue().toString()\n      search_table.addRow(-1,formatted_entry)\n    }\n  }\n}\nclass unique_cell{\n  worksheet:ExcelScript.Worksheet\n  row:number\n  col:number\n  constructor(worksheet:ExcelScript.Worksheet,row:number,col:number){\n    this.worksheet=worksheet\n    this.row=row\n    this.col=col\n  }\n  getValue(){\n    return this.worksheet.getCell(this.row,this.col).getValue().toString()\n  }\n}\nfunction main(workbook: ExcelScript.Workbook) {\n  this.workbook = workbook\n  database_sheet = workbook.getWorksheet(\"Database\")\n  database_table = database_sheet.getTable(\"Table1\")\n  database_range = database_table.getRangeBetweenHeaderAndTotal()\n  interface_sheet = workbook.getWorksheet(\"Interface\")\n  search_table = interface_sheet.getTable(\"Table2\")\n  adv_search = new search_form(interface_sheet)\n  switch(adv_search.search_option.getValue()){\n    case search_options.id:\n      adv_search.searchByID()\n      break\n    case search_options.email:\n      adv_search.searchByEmail()\n      break\n    case search_options.name:\n      adv_search.searchByName()\n      break\n    default:\n      console.log(\"ERROR: This search option hasn't been added to script 'Advanced Search!'\")\n      return null\n  }\n  interface_sheet.getRange(\"K5:K100\").setNumberFormat(\"m/d/yyyy\")\n}","description":"","parameterInfo":null,"apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}