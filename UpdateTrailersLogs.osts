{"version":"0.2.0","body":"/*\nPURPOSE: Inputs formulas into the trailers logs excel file automatically to change what information it is pulling from\nAUTHOR: Raymond Levi Triana\nDATE: 11/15/22\nWORKBOOK: TrailersLogs.xlsx\n*/\n\n/*\nTODO:\nReinput formulas each day into Trailers path to get today's data\nCheck if this week's monday with this day is in the DataTable\n  IF NOT\n    overwrite the oldest monday/day pair's data\n*/\nclass yard{\n  constructor(name:string){\n    this.name = name\n  }\n  name:string\n  total:number\n  twentyEight: trailer_size = new trailer_size(\"28\")\n  twentyEight_L: trailer_size = new trailer_size(\"28_L\")\n  thirtySix: trailer_size = new trailer_size(\"36\")\n  thirtySix_L: trailer_size = new trailer_size(\"36_L\")\n  fourtyEight: trailer_size = new trailer_size(\"48\")\n  fourtyEight_L: trailer_size = new trailer_size(\"48_L\")\n}\n\nclass trailer_size{\n  constructor(name:string){\n    this.name = name\n    this.qty = 0\n  }\n  name:string\n  qty:number\n  get_name(){\n    return this.name\n  }\n  get_qty(){\n    return this.qty\n  }\n  set_qty(new_qty){\n    this.qty = new_qty\n  }\n  increment_qty(){\n    this.qty+=1\n  }\n}\n\nvar trailers_table: ExcelScript.Table//used as a buffer to search other files using formulas\nvar data_table:ExcelScript.Table//final table pivot tables read from\nvar weeks:Number[]//unique weeks found within data\nvar today:Date//today in unix format\nvar today_excel:number//today is excel format\nvar this_monday:Date//this week's monday in unix format\nvar formula:string//the formulas used to query the doorsheet\n\nvar table_cache:(string|number|boolean)[][]//used to hold a copy of the trailers table in ram for searching\n\nvar yards={\n  JAX: new yard(\"JAX\"),\n  SAV: new yard(\"SAV\"),\n  OCALA: new yard(\"OCALA\"),\n  ORLANDO: new yard(\"ORLANDO\"),\n  TALLAHASSEE: new yard(\"TALLAHASSEE\"),\n  PENSACOLA: new yard(\"PENSACOLA\"),\n  MACON: new yard(\"MACON\"),\n  DAYTONA: new yard(\"DAYTONA\")\n}\n\n\nlet days = {\n  monday:1,\n  tuesday:2,\n  wednesday:3,\n  thursday:4,\n  friday:5\n}\n\nconst days_map={\n  1:\"Monday\",\n  2:\"Tuesday\",\n  3:\"Wednesday\",\n  4:\"Thursday\",\n  5:\"Friday\",\n  6:\"Saturday\",\n  7:\"Sunday\"\n}\n\nconst sizes={\n  twentyEight:'28',\n  twentyEight_L:'28L',\n  thirtySix:'36',\n  thirtySix_L:'36L',\n  fourtyEight:'48',\n  fourtyEight_L:'48L'\n  }\n\n\nfunction main(workbook: ExcelScript.Workbook) {\n    workbook.refreshAllLinksToLinkedWorkbooks()\n    init_script(workbook)\n    parse_trailers_table()\n    print_yards()\n    save_data()\n}\n\nfunction save_data(){\n  var this_monday_locale = this_monday.toLocaleDateString()\n  var data_table_cache:(Number|Boolean|String)[][] = data_table.getRangeBetweenHeaderAndTotal().getColumn(0).getTexts()\n  var data_table_weeks:String[]=new Array()\n  for(var row in data_table_cache)\n    if(!data_table_weeks.includes(data_table_cache[row][0].toString()))\n      data_table_weeks.push(data_table_cache[row][0].toString())\n\n  //IF THE WEEK DOES NOT EXIST INSET IT INTO THE TABLE\n  if(!data_table_weeks.includes(this_monday_locale)){\n    sort_table(data_table,0,true)\n    filter_table(data_table,data_table.getRangeBetweenHeaderAndTotal().getCell(0,0).getText(),0)\n    filter_table(data_table, days_map[today.getDay()], 1)\n    var visible_cells = data_table.getRangeBetweenHeaderAndTotal().getVisibleView().getCellAddresses()\n    for(var row in visible_cells){\n      var row_index = parseInt(visible_cells[row][0].split(\"A\")[1]) - 1\n      data_table.getRange().getCell(row_index, 0).setValue(this_monday_locale)\n    }\n    data_table.getAutoFilter().clearCriteria()\n  }\n  \n    \n    filter_table(data_table,this_monday_locale,0)\n    filter_table(data_table, days_map[today.getDay()],1)\n    \n    var visible_cells = data_table.getRangeBetweenHeaderAndTotal().getVisibleView().getCellAddresses()\n    for(var row in visible_cells){\n      var row_index = parseInt( visible_cells[row][0].split(\"A\")[1] )-1\n      switch (data_table.getRange().getCell(row_index, 2).getText()){\n        case \"JAX\":\n        data_table.getRange().getCell(row_index, 4).setValue(yards.JAX.twentyEight.get_qty())\n        data_table.getRange().getCell(row_index, 5).setValue(yards.JAX.twentyEight_L.get_qty())\n        data_table.getRange().getCell(row_index, 6).setValue(yards.JAX.thirtySix.get_qty())\n        data_table.getRange().getCell(row_index, 7).setValue(yards.JAX.thirtySix_L.get_qty())\n        data_table.getRange().getCell(row_index, 8).setValue(yards.JAX.fourtyEight.get_qty())\n        data_table.getRange().getCell(row_index, 9).setValue(yards.JAX.fourtyEight_L.get_qty())\n          break;\n        case \"SAV\":\n          data_table.getRange().getCell(row_index, 4).setValue(yards.SAV.twentyEight.get_qty())\n          data_table.getRange().getCell(row_index, 5).setValue(yards.SAV.twentyEight_L.get_qty())\n          data_table.getRange().getCell(row_index, 6).setValue(yards.SAV.thirtySix.get_qty())\n          data_table.getRange().getCell(row_index, 7).setValue(yards.SAV.thirtySix_L.get_qty())\n          data_table.getRange().getCell(row_index, 8).setValue(yards.SAV.fourtyEight.get_qty())\n          data_table.getRange().getCell(row_index, 9).setValue(yards.SAV.fourtyEight_L.get_qty())\n          break;\n        case \"OCALA\":\n          data_table.getRange().getCell(row_index, 4).setValue(yards.OCALA.twentyEight.get_qty())\n          data_table.getRange().getCell(row_index, 5).setValue(yards.OCALA.twentyEight_L.get_qty())\n          data_table.getRange().getCell(row_index, 6).setValue(yards.OCALA.thirtySix.get_qty())\n          data_table.getRange().getCell(row_index, 7).setValue(yards.OCALA.thirtySix_L.get_qty())\n          data_table.getRange().getCell(row_index, 8).setValue(yards.OCALA.fourtyEight.get_qty())\n          data_table.getRange().getCell(row_index, 9).setValue(yards.OCALA.fourtyEight_L.get_qty())\n          break;\n        case \"ORLANDO\":\n          data_table.getRange().getCell(row_index, 4).setValue(yards.ORLANDO.twentyEight.get_qty())\n          data_table.getRange().getCell(row_index, 5).setValue(yards.ORLANDO.twentyEight_L.get_qty())\n          data_table.getRange().getCell(row_index, 6).setValue(yards.ORLANDO.thirtySix.get_qty())\n          data_table.getRange().getCell(row_index, 7).setValue(yards.ORLANDO.thirtySix_L.get_qty())\n          data_table.getRange().getCell(row_index, 8).setValue(yards.ORLANDO.fourtyEight.get_qty())\n          data_table.getRange().getCell(row_index, 9).setValue(yards.ORLANDO.fourtyEight_L.get_qty())\n          break;\n        case \"TALLAHASSEE\":\n          data_table.getRange().getCell(row_index, 4).setValue(yards.TALLAHASSEE.twentyEight.get_qty())\n          data_table.getRange().getCell(row_index, 5).setValue(yards.TALLAHASSEE.twentyEight_L.get_qty())\n          data_table.getRange().getCell(row_index, 6).setValue(yards.TALLAHASSEE.thirtySix.get_qty())\n          data_table.getRange().getCell(row_index, 7).setValue(yards.TALLAHASSEE.thirtySix_L.get_qty())\n          data_table.getRange().getCell(row_index, 8).setValue(yards.TALLAHASSEE.fourtyEight.get_qty())\n          data_table.getRange().getCell(row_index, 9).setValue(yards.TALLAHASSEE.fourtyEight_L.get_qty())\n          break;\n        case \"PENSACOLA\":\n          data_table.getRange().getCell(row_index, 4).setValue(yards.PENSACOLA.twentyEight.get_qty())\n          data_table.getRange().getCell(row_index, 5).setValue(yards.PENSACOLA.twentyEight_L.get_qty())\n          data_table.getRange().getCell(row_index, 6).setValue(yards.PENSACOLA.thirtySix.get_qty())\n          data_table.getRange().getCell(row_index, 7).setValue(yards.PENSACOLA.thirtySix_L.get_qty())\n          data_table.getRange().getCell(row_index, 8).setValue(yards.PENSACOLA.fourtyEight.get_qty())\n          data_table.getRange().getCell(row_index, 9).setValue(yards.PENSACOLA.fourtyEight_L.get_qty())\n          break;\n        case \"MACON\":\n          data_table.getRange().getCell(row_index, 4).setValue(yards.MACON.twentyEight.get_qty())\n          data_table.getRange().getCell(row_index, 5).setValue(yards.MACON.twentyEight_L.get_qty())\n          data_table.getRange().getCell(row_index, 6).setValue(yards.MACON.thirtySix.get_qty())\n          data_table.getRange().getCell(row_index, 7).setValue(yards.MACON.thirtySix_L.get_qty())\n          data_table.getRange().getCell(row_index, 8).setValue(yards.MACON.fourtyEight.get_qty())\n          data_table.getRange().getCell(row_index, 9).setValue(yards.MACON.fourtyEight_L.get_qty())\n          break;\n        case \"DAYTONA\":\n          data_table.getRange().getCell(row_index, 4).setValue(yards.DAYTONA.twentyEight.get_qty())\n          data_table.getRange().getCell(row_index, 5).setValue(yards.DAYTONA.twentyEight_L.get_qty())\n          data_table.getRange().getCell(row_index, 6).setValue(yards.DAYTONA.thirtySix.get_qty())\n          data_table.getRange().getCell(row_index, 7).setValue(yards.DAYTONA.thirtySix_L.get_qty())\n          data_table.getRange().getCell(row_index, 8).setValue(yards.DAYTONA.fourtyEight.get_qty())\n          data_table.getRange().getCell(row_index, 9).setValue(yards.DAYTONA.fourtyEight_L.get_qty())\n          break;\n\n      }\n\n    }\n  \n\n\n\n\n}\n\nfunction print_yards(){\n  console.log(yards)\n}\n\nfunction parse_trailers_table(){\n  //clear the filters in the table\n  data_table.getAutoFilter().clearCriteria()\n  sort_table(data_table,0,true)\n  for (var row in table_cache)\n      if (table_cache[row][2] != \"\") {\n        if (table_cache[row][2].toString().includes(\"ORL\")){//ORLANDO\n          switch (table_cache[row][1].toString()) {\n            case sizes.twentyEight:\n              yards.ORLANDO.twentyEight.increment_qty()\n              break;\n            case sizes.twentyEight_L:\n              yards.ORLANDO.twentyEight_L.increment_qty()\n              break;\n            case sizes.thirtySix:\n              yards.ORLANDO.thirtySix.increment_qty()\n              break;\n            case sizes.thirtySix_L:\n              yards.ORLANDO.thirtySix_L.increment_qty()\n              break;\n            case sizes.fourtyEight:\n              yards.ORLANDO.fourtyEight.increment_qty()\n              break;\n            case sizes.fourtyEight_L:\n              yards.ORLANDO.fourtyEight_L.increment_qty()\n              break;\n          }\n        }\n        if(table_cache[row][2].toString().includes(\"TALL\")){//TALLAHASSEE\n          switch (table_cache[row][1].toString()) {\n            case sizes.twentyEight:\n              yards.TALLAHASSEE.twentyEight.increment_qty()\n              break;\n            case sizes.twentyEight_L:\n              yards.TALLAHASSEE.twentyEight_L.increment_qty()\n              break;\n            case sizes.thirtySix:\n              yards.TALLAHASSEE.thirtySix.increment_qty()\n              break;\n            case sizes.thirtySix_L:\n              yards.TALLAHASSEE.thirtySix_L.increment_qty()\n              break;\n            case sizes.fourtyEight:\n              yards.TALLAHASSEE.fourtyEight.increment_qty()\n              break;\n            case sizes.fourtyEight_L:\n              yards.TALLAHASSEE.fourtyEight_L.increment_qty()\n              break;\n          }\n        }\n        if(table_cache[row][2].toString().includes(\"MAC\")){//MACON\n          switch (table_cache[row][1].toString()) {\n            case sizes.twentyEight:\n              yards.MACON.twentyEight.increment_qty()\n              break;\n            case sizes.twentyEight_L:\n              yards.MACON.twentyEight_L.increment_qty()\n              break;\n            case sizes.thirtySix:\n              yards.MACON.thirtySix.increment_qty()\n              break;\n            case sizes.thirtySix_L:\n              yards.MACON.thirtySix_L.increment_qty()\n              break;\n            case sizes.fourtyEight:\n              yards.MACON.fourtyEight.increment_qty()\n              break;\n            case sizes.fourtyEight_L:\n              yards.MACON.fourtyEight_L.increment_qty()\n              break;\n          }\n        }\n        if(table_cache[row][2].toString().includes(\"SAV\")){//SAVANNA\n          switch (table_cache[row][1].toString()) {\n            case sizes.twentyEight:\n              yards.SAV.twentyEight.increment_qty()\n              break;\n            case sizes.twentyEight_L:\n              yards.SAV.twentyEight_L.increment_qty()\n              break;\n            case sizes.thirtySix:\n              yards.SAV.thirtySix.increment_qty()\n              break;\n            case sizes.thirtySix_L:\n              yards.SAV.thirtySix_L.increment_qty()\n              break;\n            case sizes.fourtyEight:\n              yards.SAV.fourtyEight.increment_qty()\n              break;\n            case sizes.fourtyEight_L:\n              yards.SAV.fourtyEight_L.increment_qty()\n              break;\n          }\n        }\n        if(table_cache[row][2].toString().includes(\"PENS\")){//PENSACOLA\n          switch (table_cache[row][1].toString()) {\n            case sizes.twentyEight:\n              yards.PENSACOLA.twentyEight.increment_qty()\n              break;\n            case sizes.twentyEight_L:\n              yards.PENSACOLA.twentyEight_L.increment_qty()\n              break;\n            case sizes.thirtySix:\n              yards.PENSACOLA.thirtySix.increment_qty()\n              break;\n            case sizes.thirtySix_L:\n              yards.PENSACOLA.thirtySix_L.increment_qty()\n              break;\n            case sizes.fourtyEight:\n              yards.PENSACOLA.fourtyEight.increment_qty()\n              break;\n            case sizes.fourtyEight_L:\n              yards.PENSACOLA.fourtyEight_L.increment_qty()\n              break;\n          }\n        }\n        if(table_cache[row][2].toString().includes(\"OCL\")){//OCALA\n          switch (table_cache[row][1].toString()) {\n            case sizes.twentyEight:\n              yards.OCALA.twentyEight.increment_qty()\n              break;\n            case sizes.twentyEight_L:\n              yards.OCALA.twentyEight_L.increment_qty()\n              break;\n            case sizes.thirtySix:\n              yards.OCALA.thirtySix.increment_qty()\n              break;\n            case sizes.thirtySix_L:\n              yards.OCALA.thirtySix_L.increment_qty()\n              break;\n            case sizes.fourtyEight:\n              yards.OCALA.fourtyEight.increment_qty()\n              break;\n            case sizes.fourtyEight_L:\n              yards.OCALA.fourtyEight_L.increment_qty()\n              break;\n          }\n        }\n        if(table_cache[row][2].toString().includes(\"JAX\")){//JACKSONVILLE\n          switch (table_cache[row][1].toString()) {\n            case sizes.twentyEight:\n              yards.JAX.twentyEight.increment_qty()\n              break;\n            case sizes.twentyEight_L:\n              yards.JAX.twentyEight_L.increment_qty()\n              break;\n            case sizes.thirtySix:\n              yards.JAX.thirtySix.increment_qty()\n              break;\n            case sizes.thirtySix_L:\n              yards.JAX.thirtySix_L.increment_qty()\n              break;\n            case sizes.fourtyEight:\n              yards.JAX.fourtyEight.increment_qty()\n              break;\n            case sizes.fourtyEight_L:\n              yards.JAX.fourtyEight_L.increment_qty()\n              break;\n          }\n        }\n        if(table_cache[row][2].toString().includes(\"DAY\")){//DAYTONA\n          switch(table_cache[row][1].toString()){\n            case sizes.twentyEight:\n              yards.DAYTONA.twentyEight.increment_qty()\n              break;\n            case sizes.twentyEight_L:\n              yards.DAYTONA.twentyEight_L.increment_qty()\n              break;\n            case sizes.thirtySix:\n              yards.DAYTONA.thirtySix.increment_qty()\n              break;\n            case sizes.thirtySix_L:\n              yards.DAYTONA.thirtySix_L.increment_qty()\n              break;\n            case sizes.fourtyEight:\n              yards.DAYTONA.fourtyEight.increment_qty()\n              break;\n            case sizes.fourtyEight_L:\n              yards.DAYTONA.fourtyEight_L.increment_qty()\n              break;\n          }\n        }\n      }\n  table_cache = new Array()\n}\n\n\n\nfunction init_script(workbook:ExcelScript.Workbook){\n  trailers_table = workbook.getWorksheet(\"Trailers\").getTable(\"TrailersTable\")\n  data_table = workbook.getWorksheet(\"Data\").getTable(\"DataTable\")\n\n  weeks = new Array()\n  var temp = data_table.getRangeBetweenHeaderAndTotal().getColumn(0).getValues()\n  for(var item in temp){\n    if (!weeks.includes(parseInt(temp[item][0].toString()))){\n      weeks.push( parseInt( temp[item][0].toString() ) )\n    }\n  }\n  today = new Date()\n  today_excel = JSDateToExcelDate(today)\n\n  this_monday = new Date()\n  this_monday.setDate( today.getDate() - (today.getDay()-1) )\n\n  //PARSE TRAILERS TABLE\n  table_cache = trailers_table.getRangeBetweenHeaderAndTotal().getValues()\n\n  }\n\nfunction ExcelDateToJSDate(date:number){\n  return new Date(Math.round((date-25569)*86400*1000))\n}\n\nfunction JSDateToExcelDate(inDate:Date) {\n  let date = new Date();\n  let converted = 25569.0 + ((date.getTime() - (date.getTimezoneOffset() * 60 * 1000)) / (1000 * 60 * 60 * 24));\n  return converted\n}\n\n\nfunction filter_table(table: ExcelScript.Table, term: string, col: number) {\n\n  let filterCriteria: ExcelScript.FilterCriteria = {\n\n    color: null,\n\n    criterion1: \"=\" + term,\n\n    criterion2: null,\n\n    filterOn: ExcelScript.FilterOn.custom,\n\n    subField: null,\n\n    dynamicCriteria: ExcelScript.DynamicFilterCriteria.unknown,\n\n    icon: null,\n\n    operator: ExcelScript.FilterOperator.or,\n\n    values:new Array()\n\n  };\n\n  table.getAutoFilter().apply(table.getRange(), col, filterCriteria)\n\n}\n\nfunction sort_table(table: ExcelScript.Table, col: number, isAscending: boolean) {\n  let sort: ExcelScript.SortField = {\n\n    ascending: isAscending,\n\n    color: \"000000\",\n\n    key: col,\n\n    sortOn: ExcelScript.SortOn.value\n\n  }\n\n  table.getSort().apply([sort])\n}","description":"","parameterInfo":"{\"originalParameterOrder\":[],\"parameterSchema\":{\"type\":\"object\",\"default\":{},\"x-ms-visibility\":\"internal\"},\"returnSchema\":{\"type\":\"object\",\"properties\":{}}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}